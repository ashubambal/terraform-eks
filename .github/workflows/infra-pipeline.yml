name: 'terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: Select Terraform action
        options:
          - apply
          - destroy
          required: true
          
  push:
    branches:
      - main
      - stage

jobs:
  terraform:
    name: 'Terraform'
    env:
      # AWS Secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    runs-on: ubuntu-latest
    environment: stage

    steps:
      # Checkout the repository to the GitHub Action runner
      - name: Checkout
        uses: actions/checkout@v3

      # Initialize a new or existing Terraform working diirectory by creating initial files, loading any remote state, downloading moduls etc.        
      - uses: hashicorp/setup-terraform@v3

      # Initialize Terraform
      - name: Terraform Init
        id: init
        run: terraform init

        # Check Terraform Format
      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check

        # Validate Terraform Configuration file  
      - name: Terraform Validate
        id: validate
        run: terraform validate

        # Generate and show terraform plan1
      - name: Terraform plan
        id: plan
        run: terraform plan
        continue-on-error: true

        # Apply the terraform configuration  
      - name: Terraform Apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        id: Apply
        run: terraform ${{ github.event.inputs.terraform_action }} -auto-approve

        # Destroy the terraform configuration  
      - name: Terraform Destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        id: Destroy
        run: terraform ${{ github.event.inputs.terraform_action }} -auto-approve