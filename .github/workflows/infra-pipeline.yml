name: 'terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: Select Terraform action
        options:
          - apply
          - destroy
        required: true

  push:
    branches:
      - main
      - stage

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: stage

    steps:
      # Checkout the repository to the GitHub Action runner
      - name: Checkout
        uses: actions/checkout@v3

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: uap-southeast-1  # Update this if your region is different

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Initialize Terraform
      - name: Terraform Init
        id: init
        run: terraform init

      # Check Terraform Format
      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check

      # Validate Terraform Configuration file  
      - name: Terraform Validate
        id: validate
        run: terraform validate

      # Generate and show Terraform plan
      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      # Apply the terraform configuration  
      - name: Terraform Apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        id: apply
        run: terraform ${{ github.event.inputs.terraform_action }} -auto-approve

      # Destroy the terraform configuration  
      - name: Terraform Destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        id: destroy
        run: terraform ${{ github.event.inputs.terraform_action }} -auto-approve
